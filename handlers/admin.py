import datetime
import pathlib
import sys
from main import bot, dp
from keyboards import *
from aiogram import Bot, Dispatcher, types, Router
from aiogram import types, F
from aiogram.types.input_file import FSInputFile
from aiogram.utils.formatting import Text, Code, Bold
from aiogram.fsm.context import FSMContext
from aiogram.filters import Command
from aiogram.types import ContentType, Message
from db import Database
from states import *

card_summs = [
    "500",
    "1000",
    "1500",
    "2000",
    "3000",
    "5000",
    "10000"
]

script_dir = pathlib.Path(sys.argv[0]).parent
db_file = script_dir / 'database.db'

db = Database(db_file=db_file)


@dp.message(F.text == "üë®‚Äçüíª –ú–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞")
async def admin_menu(message: types.Message):
     if (db.user_exists(message.from_user.id)):
        if (int(db.admin_exists(message.from_user.id)) == 1):
            await bot.send_message(message.chat.id, f"{message.from_user.full_name}, –í—ã –≤ –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.\n\n–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª",
                            reply_markup=sec_adm_keyboard)
     
@dp.message(F.text == "üõí –î–µ–π—Å—Ç–≤–∏—è —Å —Ç–æ–≤–∞—Ä–∞–º–∏")
async def admin_menu(message: types.Message):
     if (db.user_exists(message.from_user.id)):
        if (int(db.admin_exists(message.from_user.id)) == 1):
            await bot.send_message(message.chat.id, f"–í—ã–±—Ä–∞–Ω—ã–π —Ä–∞–∑–¥–µ–ª - üõí –î–µ–π—Å—Ç–≤–∏—è —Å —Ç–æ–≤–∞—Ä–∞–º–∏",
                            reply_markup=card_adm_keyboard)
            
@dp.message(F.text == "üñ•Ô∏è –î–µ–π—Å—Ç–≤–∏—è —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º–∏")
async def admin_menu(message: types.Message):
     if (db.user_exists(message.from_user.id)):
        if (int(db.admin_exists(message.from_user.id)) == 1):
            await bot.send_message(message.chat.id, f"–í—ã–±—Ä–∞–Ω—ã–π —Ä–∞–∑–¥–µ–ª - üñ•Ô∏è –î–µ–π—Å—Ç–≤–∏—è —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º–∏",
                            reply_markup=admin_adm_keyboard)

@dp.message(F.text == "üìé–ü—Ä–æ—á–µ–µ")
async def admin_menu(message: types.Message):
     if (db.user_exists(message.from_user.id)):
        if (int(db.admin_exists(message.from_user.id)) == 1):
            await bot.send_message(message.chat.id, f"–í—ã–±—Ä–∞–Ω—ã–π —Ä–∞–∑–¥–µ–ª - üìé–ü—Ä–æ—á–µ–µ",
                            reply_markup=another_adm_keyboard)

@dp.message(F.text == "–î–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞")
async def cmd_admin(message: types.Message, state: FSMContext):
    if (db.user_exists(message.from_user.id)):
            if (int(db.admin_exists(message.from_user.id)) == 1):
                await message.answer(text="–í–≤–µ–¥–∏—Ç–µ ID –Ω–æ–≤–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞")
                await state.set_state(AdminAction.get_new_admin_id)

@dp.message(AdminAction.get_new_admin_id)
async def admin_send(message: types.Message, state: FSMContext):
    db.set_admin(user_id=message.text)
    await message.answer(text=f"–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä c ID {message.text} –¥–æ–±–∞–≤–ª–µ–Ω")
    await state.clear()


@dp.message(F.text == "–£–¥–∞–ª–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞")
async def cmd_admin(message: types.Message, state: FSMContext):
    if (db.user_exists(message.from_user.id)):
            if (int(db.admin_exists(message.from_user.id)) == 1):
                await message.answer(text="–í–≤–µ–¥–∏—Ç–µ ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞, –∫–æ—Ç–æ—Ä–æ–≥–æ –∂–µ–ª–∞–µ—Ç–µ —É–¥–∞–ª–∏—Ç—å")
                await state.set_state(AdminAction.get_del_admin_id)

@dp.message(AdminAction.get_del_admin_id)
async def admin_send(message: types.Message, state: FSMContext):
    db.del_admin(user_id=message.text)
    await message.answer(text=f"–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä c ID {message.text} —Ä–∞–∑–∂–∞–ª–æ–≤–∞–Ω")
    await state.clear()


@dp.message(F.text == "–î–æ–±–∞–≤–∏—Ç—å –∫–∞—Ä—Ç—É")
async def cmd_admin(message: types.Message, state: FSMContext):
    if (db.user_exists(message.from_user.id)):
            if (int(db.admin_exists(message.from_user.id)) == 1):
                await message.answer(text="–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–∏–Ω–∞–ª –∏ –Ω–æ–º–µ—Ä –ø–æ–¥–∞—Ä–æ—á–Ω–æ–π –∫–∞—Ä—Ç—ã —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª\n\n–ù–∞–ø—Ä–∏–º–µ—Ä: 500 xxxxyyyyzzzz")
                await state.set_state(AdminAction.add_new_card)

@dp.message(AdminAction.add_new_card)
async def cmd_admin(message: types.Message, state: FSMContext):
    try:
        if ((message.text.split()[0].isdigit()) and (message.text.split()[1].isdigit())) and message.text.split()[0] in card_summs and len(message.text.split()[1])==12:
            db.add_product(amount=(message.text.split())[0], number=(message.text.split())[1])
            await message.answer(text=f"–ö–∞—Ä—Ç–∞ –Ω–æ–º–∏–Ω–∞–ª–æ–º {(message.text.split())[0]} —Å –Ω–æ–º–µ—Ä–æ–º {(message.text.split())[1]} –¥–æ–±–∞–≤–ª–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
            await state.clear()
        else:
            await message.answer(text=f"–û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞!\n\n–í—ã–ø–æ–ª–Ω–µ–Ω –≤—ã—Ö–æ–¥ –∏–∑ –º–µ–Ω—é")
            await state.clear()
    except:
            await message.answer(text=f"–û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞!\n\n–í—ã–ø–æ–ª–Ω–µ–Ω –≤—ã—Ö–æ–¥ –∏–∑ –º–µ–Ω—é")
            await state.clear()


@dp.message(F.text == "–£–¥–∞–ª–∏—Ç—å –∫–∞—Ä—Ç—É")
async def cmd_admin(message: types.Message, state: FSMContext):
    if (db.user_exists(message.from_user.id)):
            if (int(db.admin_exists(message.from_user.id)) == 1):
                await message.answer(text="–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –ø–æ–¥–∞—Ä–æ—á–Ω–æ–π –∫–∞—Ä—Ç—ã, –∫–æ—Ç–æ—Ä—É—é –Ω—É–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å", reply_markup=None)
                await state.set_state(AdminAction.del_card)

@dp.message(AdminAction.del_card)
async def cmd_admin(message: types.Message, state: FSMContext):
    try:
        if message.text.isdigit(): 
            db.del_product(number=message.text)
            await message.answer(text=f"–ö–∞—Ä—Ç–∞ —Å –Ω–æ–º–µ—Ä–æ–º {message.text} —É–¥–∞–ª–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
            await state.clear()
        else:
            await message.answer(text=f"–û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞!\n\n–í—ã–ø–æ–ª–Ω–µ–Ω –≤—ã—Ö–æ–¥ –∏–∑ –º–µ–Ω—é")
            await state.clear()
    except:
            await message.answer(text=f"–û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞!\n\n–í—ã–ø–æ–ª–Ω–µ–Ω –≤—ã—Ö–æ–¥ –∏–∑ –º–µ–Ω—é")
            await state.clear()
        


@dp.message(F.text == "‚§µÔ∏è –í—ã–≥—Ä—É–∑–∏—Ç—å –ë–î")
async def cmd_admin(message: types.Message, state: FSMContext):
    if (db.user_exists(message.from_user.id)):
            if (int(db.admin_exists(message.from_user.id)) == 1):
                await bot.send_document(message.chat.id, FSInputFile('database.db'))

@dp.message(F.text == "–¢–µ—Å—Ç")
async def cmd_admin(message: types.Message, state: FSMContext):
     await bot.send_message(message.chat.id, db.product_exists())


@dp.message(F.content_type == ContentType.SUCCESSFUL_PAYMENT)
async def successful_payment(message: types.Message):
    payment_info = str(message.successful_payment).split()
    print("\n\n\n")
    print("{:^30}".format("–ù–û–í–ê–Ø –û–ü–õ–ê–¢–ê\n\n"))
    print("{:<30}".format(f"{datetime.datetime.today()}"))
    for i in payment_info:
        print("{:<30}".format(f"{i}"))
    title1 = Bold("üì± –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è iPhone, iPad –∏–ª–∏ iPod touch:")
    title2 = Bold("üíª –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è –∫–æ–º–ø—å—é—Ç–µ—Ä–∞ Mac:")
    card_number = str(db.new_buy(amount=int(int(message.successful_payment.total_amount)/119), user_id=message.chat.id, product='–ü–æ–¥–∞—Ä–æ—á–Ω–∞—è –∫–∞—Ä—Ç–∞'))
    mes = Bold(str(card_number))
    content = Text(Bold("–û–ø–ª–∞—Ç–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ!"), "üçè", "\n\n–ù–æ–º–µ—Ä –ø–æ–¥–∞—Ä–æ—á–Ω–æ–π –∫–∞—Ä—Ç—ã: ", Code(mes),"\n–¢–∏–ø —Ç–æ–≤–∞—Ä–∞: –ü–æ–¥–∞—Ä–æ—á–Ω–∞—è –∫–∞—Ä—Ç–∞\n–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–∫—É–ø–∫—É –≤ –Ω–∞—à–µ–º –º–∞–≥–∞–∑–∏–Ω–µ –±—É–¥–µ–º —Ä–∞–¥—ã –≤–∏–¥–µ—Ç—å –≤–∞—Å —Å–Ω–æ–≤–∞!\n–ë—É–¥–µ–º –∂–¥–∞—Ç—å –≤–∞—à –æ—Ç–∑—ã–≤ –∑–¥–µ—Å—å @AppleCardss_tp\n\n", title1, "\n1. –û—Ç–∫—Ä–æ–π—Ç–µ App Store.\n2. –í –≤–µ—Ä—Ö–Ω–µ–π —á–∞—Å—Ç–∏ —ç–∫—Ä–∞–Ω–∞ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –≤—Ö–æ–¥–∞ –∏–ª–∏ —Å–≤–æ–µ —Ñ–æ—Ç–æ.\n3. –ù–∞–∂–º–∏—Ç–µ ¬´–ü–æ–≥–∞—Å–∏—Ç—å –ø–æ–¥–∞—Ä–æ—á–Ω—É—é –∫–∞—Ä—Ç—É –∏–ª–∏ –∫–æ–¥¬ª.\n\n", title2, "\n1. –û—Ç–∫—Ä–æ–π—Ç–µ App Store.\n2. –ù–∞–∂–º–∏—Ç–µ —Å–≤–æ–µ –∏–º—è –∏–ª–∏ –∫–Ω–æ–ø–∫—É –≤—Ö–æ–¥–∞ –Ω–∞ –±–æ–∫–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏.\n3. –ù–∞–∂–º–∏—Ç–µ ¬´–ü–æ–≥–∞—Å–∏—Ç—å –ø–æ–¥–∞—Ä–æ—á–Ω—É—é –∫–∞—Ä—Ç—É¬ª.")
    await bot.send_message(message.chat.id, **content.as_kwargs())
    await bot.send_message(703656168, f"–ù–æ–≤–∞—è –ø–æ–∫—É–ø–∫–∞ –≤ –±–æ—Ç–µ!{datetime.datetime.today()}\n\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.chat.id}\n\n–î–∞–Ω–Ω—ã–µ –æ –∑–∞–∫–∞–∑–µ:\n{str(message.successful_payment)}")
